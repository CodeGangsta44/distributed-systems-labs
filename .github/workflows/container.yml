name: Deploy to container
on: workflow_dispatch
env:
  APP_VERSION: ${{ github.run_id }}
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGE }}:${{ env.APP_VERSION }}
  deploy:
    name: Deploy as simple container
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - name: Save key to file
      run: echo "${{ secrets.VM_KEY }}" > key
    - name: Set permissions on file
      run: chmod 400 key
    - name: Restart container
      run: ssh -i key -o StrictHostKeyChecking=no ${{ secrets.VM_USERNAME }}@${{ secrets.VM_HOST }} '(sudo docker stop $CONTAINER_NAME ; sudo docker rm $CONTAINER_NAME) ; (sudo docker pull $CONTAINER_IMAGE:latest && sudo docker run $CONTAINER_PARAMETERS --name $CONTAINER_NAME --restart unless-stopped -d $CONTAINER_IMAGE)'
  deploy-composed:
    name: Deploy composed
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@master
    - name: Save key to file
      run: echo "${{ secrets.VM_KEY }}" > key
    - name: Set permissions on file
      run: chmod 400 key
    - name: SCP docker-compose.yaml to server
      run: scp -i key -o StrictHostKeyChecking=no docker-compose.yaml ${{ secrets.VM_USERNAME }}@${{ secrets.VM_HOST }}:/home/${{ secrets.VM_USERNAME }}/composed
    - name: Restart container
      run: ssh -i key -o StrictHostKeyChecking=no ${{ secrets.VM_USERNAME }}@${{ secrets.VM_HOST }} 'sudo docker-compose -f /home/${{ secrets.VM_USERNAME }}/composed/docker-compose.yaml down -v ; (sudo docker pull $CONTAINER_IMAGE:latest && sudo docker-compose -f /home/${{ secrets.VM_USERNAME }}/composed/docker-compose.yaml up -d)'
  deploy-k8s:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@master
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - uses: azure/aks-set-context@v3
      with:
        resource-group: '${{ secrets.AKS_RESOURCE_GROUP }}'
        cluster-name: '${{ secrets.AKS_CLUSTER_NAME }}'
    - name: Configure templates
      run: envsubst < ./k8s/templates/app-deployment.yaml.template > ./k8s/app-deployment.yaml
    - name: Deploy to Kubernetes cluster
      uses: Azure/k8s-deploy@v4
      with:
        manifests: |
          ./k8s/app-deployment.yaml
          ./k8s/mysql-deployment.yaml
          ./k8s/lb-deployment.yaml
